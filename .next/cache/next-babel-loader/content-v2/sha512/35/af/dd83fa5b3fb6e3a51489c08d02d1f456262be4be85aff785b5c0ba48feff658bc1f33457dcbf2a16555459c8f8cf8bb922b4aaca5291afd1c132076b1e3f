{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Rohit\\\\My Learnings\\\\Reactjs\\\\17-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetals(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetals;\nexport var __N_SSG = true;\nexport default MeetupDetals;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetals\");","map":{"version":3,"sources":["D:/Rohit/My Learnings/Reactjs/17-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetals","props","image","title","address","description"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQL,Y;;AAuDT,eAAeA,YAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetals(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.image}\r\n      title={props.title}\r\n      address={props.address}\r\n      description={props.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const connectedClient = await MongoClient.connect(\r\n    \"mongodb+srv://rohit4java:rohitnext241292@cluster0.icluy.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = connectedClient.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  connectedClient.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meeup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const connectedClient = await MongoClient.connect(\r\n    \"mongodb+srv://rohit4java:rohitnext241292@cluster0.icluy.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = connectedClient.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n  return {\r\n    props: {\r\n      image:\r\n        \"https://wallup.net/wp-content/uploads/2016/05/02/268880-city-Chicago-long_exposure-skyscraper-river.jpg\",\r\n      title: \"A First Meetup\",\r\n      address: \"Some street 5, some city\",\r\n      description: \"the meetup description\",\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetals;\r\n"]},"metadata":{},"sourceType":"module"}